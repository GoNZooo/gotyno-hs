import hasGeneric

union Either <L, R>{
    Left: L
    Right: R
}

struct UsingGenerics {
    field1: hasGeneric.Maybe<String>
    field2: Either<String, U32>
}

struct UsingOwnGenerics <T>{
    field1: hasGeneric.Maybe<T>
}

struct KnownForMovie {
    media_type: "movie"
    poster_path: ?String
    id: U32
    title: ?String
    vote_average: F32
    release_date: ?String
    overview: String
}

struct KnownForShow {
    media_type: "tv"
    poster_path: ?String
    id: U32
    vote_average: F32
    overview: String
    first_air_date: ?String
    name: ?String
}

untagged union KnownFor {
    KnownForShow
    KnownForMovie
    String
    F32
}

struct KnownForMovieWithoutTypeTag {
    poster_path: ?String
    id: U32
    title: ?String
    vote_average: F32
    release_date: ?String
    overview: String
}

struct KnownForShowWithoutTypeTag {
    poster_path: ?String
    id: U32
    vote_average: F32
    overview: String
    first_air_date: ?String
    name: ?String
}

union(tag = media_type, embedded) KnownForEmbedded {
    movie: KnownForMovieWithoutTypeTag
    tv: KnownForShowWithoutTypeTag
}